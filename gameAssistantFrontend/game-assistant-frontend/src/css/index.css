:root {
  --bg: rgb(11, 11, 11);
  --text: rgb(232, 232, 232);
  --muted-text: rgba(255, 255, 255, 0.6);
  --muted-button-bg: rgb(31, 31, 31);
  --section-bg: rgba(15, 17, 20, 0.9);
  --section-border: rgba(255, 255, 255, 0.05);
  --modal-bg: rgba(15, 17, 20, 0.95);
  --modal-backdrop: rgba(2,2,2,0.6);
  --image-bg: rgb(26, 26, 26);
  --game-grid-bg: rgba(255, 255, 255, 0.03);
  --main-search-input: rgba(255, 255, 255, 0.15);
  --text-input: rgba(255, 255, 255, 0.03);
  --text-input-border: rgba(255, 255, 255, 0.04);
  --profile-text-input: rgba(255, 255, 255, 0.1);
  --profile-chat-item: rgba(255, 255, 255, 0.1);
  --error-text-input: rgba(255, 202, 202);
  --error-text-input-border: rgb(253, 119, 119, 1);
  --yellow: rgb(244, 196, 48);
  --muted-yellow: rgba(244, 196, 48, 0.5);
  --green: rgba(0, 153, 0, 1);
  --muted-green: rgba(0, 153, 0, 0.5);
  --danger: rgb(226, 85, 85);
  --radius: 30px;
  --transition: 200ms ease;
  --checkbox-transition: 0.15s ease-in-out;
  --transition-cb: 220ms cubic-bezier(.2, .9, .2, 1);
}

#root {
  width: 100%;
}

body {
  height: 100%;
  margin: 0;
  padding: 0;
  font-family: "Montserrat", sans-serif;
  font-optical-sizing: auto;
  background: var(--bg);
  color: var(--text);
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  line-height: 1.35;
  color: var(--text);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
}

.btn {
  border: 2px solid var(--yellow);
  border-radius: var(--radius);
  cursor: pointer;
  transition: background var(--transition), color var(--transition);
  font-weight: 700;
  font-size: 14px;
  background: var(--yellow);
  color: var(--bg);
}

.btn:hover {
  background-color: transparent;
  color: var(--yellow);
}

.btn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.btn:disabled:hover {
  background-color: var(--yellow);
  color: var(--bg);
}

.btn-add {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition: transform var(--transition), box-shadow var(--transition);
}

.btn-danger {
  background: var(--danger);
  border-color: var(--danger);
}

.btn-danger:hover {
  color: var(--danger);
}

.link {
  color: var(--muted-text);
  border: none;
  text-decoration: underline;
  text-decoration-color: transparent;
  text-underline-offset: 3px;
  font-size: 20px;
  font-weight: 400;
  transition: color var(--transition), text-decoration-color var(--transition);
}

.link:hover {
  color: var(--muted-yellow);
  text-decoration-color: var(--muted-yellow);
}

input[type="checkbox"] {
  -webkit-appearance: none;
  appearance: none;
  width: 1rem;
  height: 1rem;
  border: 1px solid var(--yellow);
  border-radius: 0.25rem;
  background-color: transparent;
  cursor: pointer;
  transition: color var(--checkbox-transition), background-color var(--checkbox-transition), border-color var(--checkbox-transition), box-shadow var(--checkbox-transition);
  margin: 0;
}

input[type="checkbox"]:checked {
  background-color: var(--yellow);
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e");
}

input:not([type="checkbox"]), textarea {
  border-radius: var(--radius);
  outline: none;
  transition: border-color var(--transition), background-color var(--transition), color var(--transition);
}

input:not([type="checkbox"])::placeholder, textarea::placeholder {
  color: var(--muted-text);
}

input:not([type="checkbox"])[aria-invalid="true"] {
  background-color: var(--error-text-input);
  border-color: var(--error-text-input-border);
  color: black;
}

input:not([type="checkbox"])[aria-invalid="true"]::placeholder {
  color: black;
}

.full-loader {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 60;
}

.spinner {
  width: 64px;
  height: 64px;
  border-radius: 50%;
  border: 6px solid var(--muted-text);
  border-top-color: var(--yellow);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}